// Mocks generated by Mockito 5.0.17 from annotations
// in harry_challenge/test/widgets/home_screen_widget_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:harry_challenge/database/character_dao.dart' as _i2;
import 'package:harry_challenge/Managers/network_manager.dart' as _i5;
import 'package:harry_challenge/models/favorite_character.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [CharacterDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharacterDao extends _i1.Mock implements _i2.CharacterDao {
  MockCharacterDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<int> save(_i4.FavoriteCharacter? favoriteCharacter) =>
      (super.noSuchMethod(Invocation.method(#save, [favoriteCharacter]),
          returnValue: Future<int>.value(0)) as _i3.Future<int>);
  @override
  Map<String, dynamic> toMap(_i4.FavoriteCharacter? favoriteCharacter) =>
      (super.noSuchMethod(Invocation.method(#toMap, [favoriteCharacter]),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
  @override
  _i3.Future<List<_i4.FavoriteCharacter>> getFavoriteCharacters() =>
      (super.noSuchMethod(Invocation.method(#getFavoriteCharacters, []),
              returnValue: Future<List<_i4.FavoriteCharacter>>.value(
                  <_i4.FavoriteCharacter>[]))
          as _i3.Future<List<_i4.FavoriteCharacter>>);
  @override
  _i3.Future<void> delete(String? name) =>
      (super.noSuchMethod(Invocation.method(#delete, [name]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
}

/// A class which mocks [NetworkManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkManager extends _i1.Mock implements _i5.NetworkManager {
  MockNetworkManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<dynamic> getData() =>
      (super.noSuchMethod(Invocation.method(#getData, []),
          returnValue: Future<dynamic>.value()) as _i3.Future<dynamic>);
}
